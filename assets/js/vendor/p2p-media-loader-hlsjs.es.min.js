var _callbacks,_createDefaultLoader,_defaultLoader,_core,_response,_segmentId,_FragmentLoaderBase_instances,handleError_fn,abortInternal_fn,_defaultLoader2,__defProp=Object.defineProperty,__typeError=e=>{throw TypeError(e)},__defNormalProp=(e,t,a)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,__publicField=(e,t,a)=>__defNormalProp(e,"symbol"!=typeof t?t+"":t,a),__accessCheck=(e,t,a)=>t.has(e)||__typeError("Cannot "+a),__privateGet=(e,t,a)=>(__accessCheck(e,t,"read from private field"),a?a.call(e):t.get(e)),__privateAdd=(e,t,a)=>t.has(e)?__typeError("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,a),__privateSet=(e,t,a,s)=>(__accessCheck(e,t,"write to private field"),s?s.call(e,a):t.set(e,a),a),__privateMethod=(e,t,a)=>(__accessCheck(e,t,"access private method"),a);import{CoreRequestError,debug,Core}from"p2p-media-loader-core";function getSegmentRuntimeId(e,t){return t?e+`|${t.start}-`+t.end:e}function getByteRange(e,t){if(void 0!==e&&void 0!==t&&e<=t)return{start:e,end:t}}const DEFAULT_DOWNLOAD_LATENCY=10;class FragmentLoaderBase{constructor(e,t){__privateAdd(this,_FragmentLoaderBase_instances),__publicField(this,"context"),__publicField(this,"config"),__publicField(this,"stats"),__privateAdd(this,_callbacks),__privateAdd(this,_createDefaultLoader),__privateAdd(this,_defaultLoader),__privateAdd(this,_core),__privateAdd(this,_response),__privateAdd(this,_segmentId),__privateSet(this,_core,t),__privateSet(this,_createDefaultLoader,()=>new e.loader(e)),this.stats={aborted:!1,chunkCount:0,loading:{start:0,first:0,end:0},buffering:{start:0,first:0,end:0},parsing:{start:0,end:0},total:1,loaded:1,bwEstimate:0,retry:0}}load(t,e,a){this.context=t,this.config=e,__privateSet(this,_callbacks,a);const s=this.stats;var{rangeStart:r,rangeEnd:i}=t,r=getByteRange(r,void 0!==i?i-1:void 0),i=(__privateSet(this,_segmentId,getSegmentRuntimeId(t.url,r)),__privateGet(this,_core).isSegmentLoadable(__privateGet(this,_segmentId)));if(!__privateGet(this,_core).hasSegment(__privateGet(this,_segmentId))||!1===i)return __privateSet(this,_defaultLoader,__privateGet(this,_createDefaultLoader).call(this)),__privateGet(this,_defaultLoader).stats=this.stats,void(null!=(r=__privateGet(this,_defaultLoader))&&r.load(t,e,a));__privateGet(this,_core).loadSegment(__privateGet(this,_segmentId),{onSuccess:e=>{__privateSet(this,_response,e);e=__privateGet(this,_response).data.byteLength;s.loading=getLoadingStat(__privateGet(this,_response).bandwidth,e,performance.now()),s.total=s.loaded=e,a.onProgress&&a.onProgress(this.stats,t,__privateGet(this,_response).data,void 0),a.onSuccess({data:__privateGet(this,_response).data,url:t.url},this.stats,t,void 0)},onError:e=>{e instanceof CoreRequestError&&"aborted"===e.type&&this.stats.aborted||__privateMethod(this,_FragmentLoaderBase_instances,handleError_fn).call(this,e)}})}abort(){var e,t;__privateGet(this,_defaultLoader)?__privateGet(this,_defaultLoader).abort():(__privateMethod(this,_FragmentLoaderBase_instances,abortInternal_fn).call(this),null!=(t=null==(e=__privateGet(this,_callbacks))?void 0:e.onAbort)&&t.call(e,this.stats,this.context,{}))}destroy(){__privateGet(this,_defaultLoader)?__privateGet(this,_defaultLoader).destroy():(this.stats.aborted||__privateMethod(this,_FragmentLoaderBase_instances,abortInternal_fn).call(this),__privateSet(this,_callbacks,null),this.config=null)}}function getLoadingStat(e,t,a){t=a-8e3*t/e;return{start:t-DEFAULT_DOWNLOAD_LATENCY,first:t,end:a}}_callbacks=new WeakMap,_createDefaultLoader=new WeakMap,_defaultLoader=new WeakMap,_core=new WeakMap,_response=new WeakMap,_segmentId=new WeakMap,_FragmentLoaderBase_instances=new WeakSet,handleError_fn=function(e){const t={code:0,text:""};(e instanceof CoreRequestError&&"failed"===e.type||e instanceof Error)&&(t.text=e.message),null!=(e=__privateGet(this,_callbacks))&&e.onError(t,this.context,null,this.stats)},abortInternal_fn=function(){!__privateGet(this,_response)&&__privateGet(this,_segmentId)&&(this.stats.aborted=!0,__privateGet(this,_core).abortSegmentLoading(__privateGet(this,_segmentId)))};class PlaylistLoaderBase{constructor(e){__privateAdd(this,_defaultLoader2),__publicField(this,"context"),__publicField(this,"stats"),__privateSet(this,_defaultLoader2,new e.loader(e)),this.stats=__privateGet(this,_defaultLoader2).stats,this.context=__privateGet(this,_defaultLoader2).context}load(e,t,a){__privateGet(this,_defaultLoader2).load(e,t,a)}abort(){__privateGet(this,_defaultLoader2).abort()}destroy(){__privateGet(this,_defaultLoader2).destroy()}}_defaultLoader2=new WeakMap;class SegmentManager{constructor(e){__publicField(this,"core"),this.core=e}processMainManifest(e){const{levels:t,audioTracks:a}=e;for(var[s,r]of t.entries()){r=r["url"];this.core.addStreamIfNoneExists({runtimeId:Array.isArray(r)?r[0]:r,type:"main",index:s})}for(var[i,n]of a.entries()){n=n["url"];this.core.addStreamIfNoneExists({runtimeId:Array.isArray(n)?n[0]:n,type:"secondary",index:i})}}updatePlaylist(e){if(e.details){const{url:t,fragments:a,live:d}=e["details"],o=this.core.getStream(t);if(o){const l=new Set(o.segments.keys()),_=[];a.forEach((e,t)=>{var a,{url:e,byteRange:s,sn:r,start:i,end:n}=e;"initSegment"!==r&&([s,a]=s,a=getSegmentRuntimeId(e,s=getByteRange(s,void 0!==a?a-1:void 0)),l.delete(a),o.segments.has(a)||_.push({runtimeId:a,url:e,externalId:d?r:t,byteRange:s,startTime:i,endTime:n}))}),(_.length||l.size)&&this.core.updateStream(t,_,l.values())}}}}function injectMixin(e){var e=class extends e{constructor(...e){const{p2p:t,...a}=e[0]??{},s=new HlsJsP2PEngine(t);super({...a,...s.getConfigForHlsJs()}),__privateAdd(this,r),s.bindHls(this),__privateSet(this,r,s),null!=(e=null==t?void 0:t.onHlsJsCreated)&&e.call(t,this)}get p2pEngine(){return __privateGet(this,r)}},r=new WeakMap;return e}class HlsJsP2PEngine{constructor(e){__publicField(this,"core"),__publicField(this,"segmentManager"),__publicField(this,"hlsInstanceGetter"),__publicField(this,"currentHlsInstance"),__publicField(this,"debug",debug("p2pml-hlsjs:engine")),__publicField(this,"updateMediaElementEventHandlers",e=>{var t;const a=null==(t=this.currentHlsInstance)?void 0:t.media;a&&(t="register"===e?"addEventListener":"removeEventListener",a[t]("timeupdate",this.handlePlaybackUpdate),a[t]("seeking",this.handlePlaybackUpdate),a[t]("ratechange",this.handlePlaybackUpdate))}),__publicField(this,"handleManifestLoaded",(e,t)=>{var a=t.networkDetails;a instanceof XMLHttpRequest?this.core.setManifestResponseUrl(a.responseURL):a instanceof Response&&this.core.setManifestResponseUrl(a.url),this.segmentManager.processMainManifest(t)}),__publicField(this,"handleLevelSwitching",(e,t)=>{t.bitrate&&this.core.setActiveLevelBitrate(t.bitrate)}),__publicField(this,"handleLevelUpdated",(e,t)=>{this.currentHlsInstance&&this.currentHlsInstance.config.liveSyncDurationCount!==t.details.fragments.length-1&&t.details.live&&"main"===t.details.fragments[0].type&&!this.currentHlsInstance.userConfig.liveSyncDuration&&!this.currentHlsInstance.userConfig.liveSyncDurationCount&&4<t.details.fragments.length&&(this.debug("set liveSyncDurationCount "+(t.details.fragments.length-1)),this.currentHlsInstance.config.liveSyncDurationCount=t.details.fragments.length-1),this.core.setIsLive(t.details.live),this.segmentManager.updatePlaylist(t)}),__publicField(this,"handleMediaAttached",()=>{this.updateMediaElementEventHandlers("register")}),__publicField(this,"handleMediaDetached",()=>{this.updateMediaElementEventHandlers("unregister")}),__publicField(this,"handlePlaybackUpdate",e=>{e=e.target;this.core.updatePlayback(e.currentTime,e.playbackRate)}),__publicField(this,"destroyCore",()=>this.core.destroy()),__publicField(this,"destroy",()=>{this.destroyCore(),this.updateHlsEventsHandlers("unregister"),this.updateMediaElementEventHandlers("unregister"),this.currentHlsInstance=void 0}),this.core=new Core(null==e?void 0:e.core),this.segmentManager=new SegmentManager(this.core)}static injectMixin(e){return injectMixin(e)}addEventListener(e,t){this.core.addEventListener(e,t)}removeEventListener(e,t){this.core.removeEventListener(e,t)}getConfigForHlsJs(){return{fLoader:this.createFragmentLoaderClass(),pLoader:this.createPlaylistLoaderClass()}}getConfig(){return{core:this.core.getConfig()}}applyDynamicConfig(e){e.core&&this.core.applyDynamicConfig(e.core)}bindHls(e){this.hlsInstanceGetter="function"==typeof e?e:()=>e}initHlsEvents(){var e=null==(e=this.hlsInstanceGetter)?void 0:e.call(this);this.currentHlsInstance!==e&&(this.currentHlsInstance&&this.destroy(),this.currentHlsInstance=e,this.updateHlsEventsHandlers("register"),this.updateMediaElementEventHandlers("register"))}updateHlsEventsHandlers(e){const t=this.currentHlsInstance;t&&(e="register"===e?"on":"off",t[e]("hlsManifestLoaded",this.handleManifestLoaded),t[e]("hlsLevelSwitching",this.handleLevelSwitching),t[e]("hlsLevelUpdated",this.handleLevelUpdated),t[e]("hlsAudioTrackLoaded",this.handleLevelUpdated),t[e]("hlsDestroying",this.destroy),t[e]("hlsMediaAttaching",this.destroyCore),t[e]("hlsManifestLoading",this.destroyCore),t[e]("hlsMediaDetached",this.handleMediaDetached),t[e]("hlsMediaAttached",this.handleMediaAttached))}createFragmentLoaderClass(){const t=this.core,e=this;return class extends FragmentLoaderBase{constructor(e){super(e,t)}static getEngine(){return e}}}createPlaylistLoaderClass(){const t=this;return class extends PlaylistLoaderBase{constructor(e){super(e),t.initHlsEvents()}}}}export{HlsJsP2PEngine};